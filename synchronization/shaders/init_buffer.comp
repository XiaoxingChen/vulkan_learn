#version 450
#extension GL_ARB_separate_shader_objects : enable

#define WIDTH 1
#define HEIGHT 32
#define WORKGROUP_SIZE 32
layout (local_size_x = WORKGROUP_SIZE, local_size_y = WORKGROUP_SIZE, local_size_z = 1 ) in;

layout(std140, binding = 0) buffer buf
{
   vec4 imageData[];
};
layout (std140, binding = 1) uniform InputBuffer
{
  ivec4 imgSize;
} uniformBuffer;

void main() {

  /*
  In order to fit the work into workgroups, some unnecessary threads are launched.
  We terminate those threads here.
  */
  if(gl_GlobalInvocationID.x >= uniformBuffer.imgSize.x/4 && gl_GlobalInvocationID.x != 1)
    return;
  if(gl_GlobalInvocationID.y >= uniformBuffer.imgSize.y/4 && gl_GlobalInvocationID.y != 1)
    return;
  highp uint idx = gl_GlobalInvocationID.y; 
  
  imageData[idx] = vec4(
    float(4 * idx + 0), 
    float(4 * idx + 1),
    float(4 * idx + 2),
    float(4 * idx + 3));
  // imageData[idx] = 2.f * imageData[idx];
}